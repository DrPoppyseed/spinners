use once_cell::sync::Lazy;
use paste::paste;
use std::{convert::From, marker::PhantomData};

#[derive(Debug, Default, Clone)]
pub struct SpinnerVariant {
    pub name: &'static str,
    pub interval: u32,
    pub frames: Vec<&'static str>,
}

#[derive(Debug, Default, Clone)]
pub struct SpinnerIdent<S> {
    pub variant: String,
    _phantom_data: PhantomData<*const S>,
}

impl<S> SpinnerIdent<S> {
    pub fn new(variant: impl Into<String>) -> Self {
        Self {
            variant: variant.into(),
            _phantom_data: PhantomData,
        }
    }
}

#[derive(Debug, Default, Copy, Clone)]
pub struct Dots;

impl From<Dots> for SpinnerVariant {
    fn from(_: Dots) -> SpinnerVariant {
        DOTS_SPINNER.clone()
    }
}

static DOTS_SPINNER: Lazy<SpinnerVariant> = Lazy::new(|| SpinnerVariant {
    name: "dots",
    interval: 80,
    frames: vec!["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"],
});

macro_rules! spinner {
    ( $spinner_name:expr, [ $( $frame:expr ),* ], $interval:expr ) => {
        paste! {
            #[cfg(feature = $spinner_name)]
            #[derive(Debug, Default, Copy, Clone)]
            pub struct [< $spinner_name:camel >];

            #[cfg(feature = $spinner_name)]
            impl From<[< $spinner_name:camel >]> for SpinnerVariant {
                fn from(_: [< $spinner_name:camel >]) -> SpinnerVariant {
                    #[cfg(feature = $spinner_name)]
                    [< $spinner_name:upper _SPINNER>].clone()
                }
            }

            #[cfg(feature = $spinner_name)]
            static [< $spinner_name:upper _SPINNER>]: Lazy<SpinnerVariant>
                = Lazy::new(|| SpinnerVariant {
                    name: $spinner_name,
                    interval: $interval,
                    frames: vec![$($frame),*]
            });
        }
    };
}

spinner!("dots2", ["⣾", "⣽", "⣻", "⢿", "⡿", "⣟", "⣯", "⣷"], 80);
spinner!(
    "dots3",
    ["⠋", "⠙", "⠚", "⠞", "⠖", "⠦", "⠴", "⠲", "⠳", "⠓"],
    80
);
spinner!(
    "dots4",
    [
        "⠄", "⠆", "⠇", "⠋", "⠙", "⠸", "⠰", "⠠", "⠰", "⠸", "⠙", "⠋", "⠇", "⠆"
    ],
    80
);
spinner!(
    "dots5",
    [
        "⠋", "⠙", "⠚", "⠒", "⠂", "⠂", "⠒", "⠲", "⠴", "⠦", "⠖", "⠒", "⠐", "⠐",
        "⠒", "⠓", "⠋"
    ],
    80
);
spinner!(
    "dots6",
    [
        "⠁", "⠉", "⠙", "⠚", "⠒", "⠂", "⠂", "⠒", "⠲", "⠴", "⠤", "⠄", "⠄", "⠤",
        "⠴", "⠲", "⠒", "⠂", "⠂", "⠒", "⠚", "⠙", "⠉", "⠁"
    ],
    80
);
spinner!(
    "dots7",
    [
        "⠈", "⠉", "⠋", "⠓", "⠒", "⠐", "⠐", "⠒", "⠖", "⠦", "⠤", "⠠", "⠠", "⠤",
        "⠦", "⠖", "⠒", "⠐", "⠐", "⠒", "⠓", "⠋", "⠉", "⠈"
    ],
    80
);
spinner!(
    "dots8",
    [
        "⠁", "⠁", "⠉", "⠙", "⠚", "⠒", "⠂", "⠂", "⠒", "⠲", "⠴", "⠤", "⠄", "⠄",
        "⠤", "⠠", "⠠", "⠤", "⠦", "⠖", "⠒", "⠐", "⠐", "⠒", "⠓", "⠋", "⠉", "⠈",
        "⠈"
    ],
    80
);
spinner!("dots9", ["⢹", "⢺", "⢼", "⣸", "⣇", "⡧", "⡗", "⡏"], 80);
spinner!("dots10", ["⢄", "⢂", "⢁", "⡁", "⡈", "⡐", "⡠"], 80);
spinner!("dots11", ["⠁", "⠂", "⠄", "⡀", "⢀", "⠠", "⠐", "⠈"], 80);
spinner!(
    "dots12",
    [
        "⢀⠀", "⡀⠀", "⠄⠀", "⢂⠀", "⡂⠀", "⠅⠀", "⢃⠀", "⡃⠀", "⠍⠀", "⢋⠀", "⡋⠀", "⠍⠁",
        "⢋⠁", "⡋⠁", "⠍⠉", "⠋⠉", "⠋⠉", "⠉⠙", "⠉⠙", "⠉⠩", "⠈⢙", "⠈⡙", "⢈⠩", "⡀⢙",
        "⠄⡙", "⢂⠩", "⡂⢘", "⠅⡘", "⢃⠨", "⡃⢐", "⠍⡐", "⢋⠠", "⡋⢀", "⠍⡁", "⢋⠁", "⡋⠁",
        "⠍⠉", "⠋⠉", "⠋⠉", "⠉⠙", "⠉⠙", "⠉⠩", "⠈⢙", "⠈⡙", "⠈⠩", "⠀⢙", "⠀⡙", "⠀⠩",
        "⠀⢘", "⠀⡘", "⠀⠨", "⠀⢐", "⠀⡐", "⠀⠠", "⠀⢀", "⠀⡀"
    ],
    80
);
spinner!(
    "dots8bit",
    [
        "⠀", "⠁", "⠂", "⠃", "⠄", "⠅", "⠆", "⠇", "⡀", "⡁", "⡂", "⡃", "⡄", "⡅",
        "⡆", "⡇", "⠈", "⠉", "⠊", "⠋", "⠌", "⠍", "⠎", "⠏", "⡈", "⡉", "⡊", "⡋",
        "⡌", "⡍", "⡎", "⡏", "⠐", "⠑", "⠒", "⠓", "⠔", "⠕", "⠖", "⠗", "⡐", "⡑",
        "⡒", "⡓", "⡔", "⡕", "⡖", "⡗", "⠘", "⠙", "⠚", "⠛", "⠜", "⠝", "⠞", "⠟",
        "⡘", "⡙", "⡚", "⡛", "⡜", "⡝", "⡞", "⡟", "⠠", "⠡", "⠢", "⠣", "⠤", "⠥",
        "⠦", "⠧", "⡠", "⡡", "⡢", "⡣", "⡤", "⡥", "⡦", "⡧", "⠨", "⠩", "⠪", "⠫",
        "⠬", "⠭", "⠮", "⠯", "⡨", "⡩", "⡪", "⡫", "⡬", "⡭", "⡮", "⡯", "⠰", "⠱",
        "⠲", "⠳", "⠴", "⠵", "⠶", "⠷", "⡰", "⡱", "⡲", "⡳", "⡴", "⡵", "⡶", "⡷",
        "⠸", "⠹", "⠺", "⠻", "⠼", "⠽", "⠾", "⠿", "⡸", "⡹", "⡺", "⡻", "⡼", "⡽",
        "⡾", "⡿", "⢀", "⢁", "⢂", "⢃", "⢄", "⢅", "⢆", "⢇", "⣀", "⣁", "⣂", "⣃",
        "⣄", "⣅", "⣆", "⣇", "⢈", "⢉", "⢊", "⢋", "⢌", "⢍", "⢎", "⢏", "⣈", "⣉",
        "⣊", "⣋", "⣌", "⣍", "⣎", "⣏", "⢐", "⢑", "⢒", "⢓", "⢔", "⢕", "⢖", "⢗",
        "⣐", "⣑", "⣒", "⣓", "⣔", "⣕", "⣖", "⣗", "⢘", "⢙", "⢚", "⢛", "⢜", "⢝",
        "⢞", "⢟", "⣘", "⣙", "⣚", "⣛", "⣜", "⣝", "⣞", "⣟", "⢠", "⢡", "⢢", "⢣",
        "⢤", "⢥", "⢦", "⢧", "⣠", "⣡", "⣢", "⣣", "⣤", "⣥", "⣦", "⣧", "⢨", "⢩",
        "⢪", "⢫", "⢬", "⢭", "⢮", "⢯", "⣨", "⣩", "⣪", "⣫", "⣬", "⣭", "⣮", "⣯",
        "⢰", "⢱", "⢲", "⢳", "⢴", "⢵", "⢶", "⢷", "⣰", "⣱", "⣲", "⣳", "⣴", "⣵",
        "⣶", "⣷", "⢸", "⢹", "⢺", "⢻", "⢼", "⢽", "⢾", "⢿", "⣸", "⣹", "⣺", "⣻",
        "⣼", "⣽", "⣾", "⣿"
    ],
    80
);

spinner!("line", ["-", "\\", "|", "/"], 130);
spinner!("line2", ["⠂", "-", "–", "—", "–", "-"], 100);
spinner!("pipe", ["┤", "┘", "┴", "└", "├", "┌", "┬", "┐"], 100);
spinner!("simple_dots", [".  ", ".. ", "...", "   "], 400);
spinner!(
    "simple_dots_scrolling",
    [".  ", ".. ", "...", " ..", "  .", "   "],
    200
);
spinner!("star", ["✶", "✸", "✹", "✺", "✹", "✷"], 70);
spinner!("star2", ["+", "x", "*"], 80);
spinner!(
    "flip",
    ["_", "_", "_", "-", "`", "`", "'", "´", "-", "_", "_", "_"],
    70
);
spinner!("hamburger", ["☱", "☲", "☴"], 100);
spinner!(
    "grow_vertical",
    ["▁", "▃", "▄", "▅", "▆", "▇", "▆", "▅", "▄", "▃"],
    120
);
spinner!(
    "grow_horizontal",
    ["▏", "▎", "▍", "▌", "▋", "▊", "▉", "▊", "▋", "▌", "▍", "▎"],
    120
);
spinner!("balloon", [" ", ".", "o", "O", "@", "*", " "], 140);
spinner!("balloon2", [".", "o", "O", "°", "O", "o", "."], 120);
spinner!("noise", ["▓", "▒", "░"], 100);
spinner!("bounce", ["⠁", "⠂", "⠄", "⠂"], 120);
spinner!("box_bounce", ["▖", "▘", "▝", "▗"], 120);
spinner!("box_bounce2", ["▌", "▀", "▐", "▄"], 100);
spinner!("triangle", ["◢", "◣", "◤", "◥"], 50);
spinner!("arc", ["◜", "◠", "◝", "◞", "◡", "◟"], 100);
spinner!("circle", ["◡", "⊙", "◠"], 120);
spinner!("square_corners", ["◰", "◳", "◲", "◱"], 180);
spinner!("circle_quarters", ["◴", "◷", "◶", "◵"], 120);
spinner!("circle_halves", ["◐", "◓", "◑", "◒"], 50);
spinner!("squish", ["╫", "╪"], 100);
spinner!("toggle", ["⊶", "⊷"], 250);
spinner!("toggle2", ["▫", "▪"], 80);
spinner!("toggle3", ["□", "■"], 120);
spinner!("toggle4", ["■", "□", "▪", "▫"], 100);
spinner!("toggle5", ["▮", "▯"], 100);
spinner!("toggle6", ["ဝ", "၀"], 300);
spinner!("toggle7", ["⦾", "⦿"], 80);
spinner!("toggle8", ["◍", "◌"], 100);
spinner!("toggle9", ["◉", "◎"], 100);
spinner!("toggle10", ["㊂", "㊀", "㊁"], 100);
spinner!("toggle11", ["⧇", "⧆"], 50);
spinner!("toggle12", ["☗", "☖"], 120);
spinner!("toggle13", ["=", "*", "-"], 80);
spinner!("arrow", ["←", "↖", "↑", "↗", "→", "↘", "↓", "↙"], 100);
spinner!(
    "arrow2",
    ["⬆️ ", "↗️ ", "➡️ ", "↘️ ", "⬇️ ", "↙️ ", "⬅️ ", "↖️ "],
    80
);
spinner!(
    "arrow3",
    ["▹▹▹▹▹", "▸▹▹▹▹", "▹▸▹▹▹", "▹▹▸▹▹", "▹▹▹▸▹", "▹▹▹▹▸"],
    120
);
spinner!(
    "bouncing_bar",
    [
        "[    ]", "[=   ]", "[==  ]", "[=== ]", "[ ===]", "[  ==]", "[   =]",
        "[    ]", "[   =]", "[  ==]", "[ ===]", "[====]", "[=== ]", "[==  ]",
        "[=   ]"
    ],
    80
);
spinner!(
    "bouncing_ball",
    [
        "( ●    )",
        "(  ●   )",
        "(   ●  )",
        "(    ● )",
        "(     ●)",
        "(    ● )",
        "(   ●  )",
        "(  ●   )",
        "( ●    )",
        "(●     )"
    ],
    80
);
spinner!("smiley", ["😄 ", "😝 "], 200);
spinner!("monkey", ["🙈 ", "🙈 ", "🙉 ", "🙊 "], 300);
spinner!("hearts", ["💛 ", "💙 ", "💜 ", "💚 ", "❤️ "], 100);
spinner!(
    "clock",
    ["🕛 ", "🕐 ", "🕑 ", "🕒 ", "🕓 ", "🕔 ", "🕕 "],
    100
);
spinner!(
    "material",
    [
        "█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁",
        "██▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁",
        "███▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁",
        "████▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁",
        "██████▁▁▁▁▁▁▁▁▁▁▁▁▁▁",
        "██████▁▁▁▁▁▁▁▁▁▁▁▁▁▁",
        "███████▁▁▁▁▁▁▁▁▁▁▁▁▁",
        "████████▁▁▁▁▁▁▁▁▁▁▁▁",
        "█████████▁▁▁▁▁▁▁▁▁▁▁",
        "█████████▁▁▁▁▁▁▁▁▁▁▁",
        "██████████▁▁▁▁▁▁▁▁▁▁",
        "███████████▁▁▁▁▁▁▁▁▁",
        "█████████████▁▁▁▁▁▁▁",
        "██████████████▁▁▁▁▁▁",
        "██████████████▁▁▁▁▁▁",
        "▁██████████████▁▁▁▁▁",
        "▁██████████████▁▁▁▁▁",
        "▁██████████████▁▁▁▁▁",
        "▁▁██████████████▁▁▁▁",
        "▁▁▁██████████████▁▁▁",
        "▁▁▁▁█████████████▁▁▁",
        "▁▁▁▁██████████████▁▁",
        "▁▁▁▁██████████████▁▁",
        "▁▁▁▁▁██████████████▁",
        "▁▁▁▁▁██████████████▁",
        "▁▁▁▁▁██████████████▁",
        "▁▁▁▁▁▁██████████████",
        "▁▁▁▁▁▁██████████████",
        "▁▁▁▁▁▁▁█████████████",
        "▁▁▁▁▁▁▁█████████████",
        "▁▁▁▁▁▁▁▁████████████",
        "▁▁▁▁▁▁▁▁████████████",
        "▁▁▁▁▁▁▁▁▁███████████",
        "▁▁▁▁▁▁▁▁▁███████████",
        "▁▁▁▁▁▁▁▁▁▁██████████",
        "▁▁▁▁▁▁▁▁▁▁██████████",
        "▁▁▁▁▁▁▁▁▁▁▁▁████████",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁███████",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁██████",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█████",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█████",
        "█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁████",
        "██▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███",
        "██▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███",
        "███▁▁▁▁▁▁▁▁▁▁▁▁▁▁███",
        "████▁▁▁▁▁▁▁▁▁▁▁▁▁▁██",
        "█████▁▁▁▁▁▁▁▁▁▁▁▁▁▁█",
        "█████▁▁▁▁▁▁▁▁▁▁▁▁▁▁█",
        "██████▁▁▁▁▁▁▁▁▁▁▁▁▁█",
        "████████▁▁▁▁▁▁▁▁▁▁▁▁",
        "█████████▁▁▁▁▁▁▁▁▁▁▁",
        "█████████▁▁▁▁▁▁▁▁▁▁▁",
        "█████████▁▁▁▁▁▁▁▁▁▁▁",
        "█████████▁▁▁▁▁▁▁▁▁▁▁",
        "███████████▁▁▁▁▁▁▁▁▁",
        "████████████▁▁▁▁▁▁▁▁",
        "████████████▁▁▁▁▁▁▁▁",
        "██████████████▁▁▁▁▁▁",
        "██████████████▁▁▁▁▁▁",
        "▁██████████████▁▁▁▁▁",
        "▁██████████████▁▁▁▁▁",
        "▁▁▁█████████████▁▁▁▁",
        "▁▁▁▁▁████████████▁▁▁",
        "▁▁▁▁▁████████████▁▁▁",
        "▁▁▁▁▁▁███████████▁▁▁",
        "▁▁▁▁▁▁▁▁█████████▁▁▁",
        "▁▁▁▁▁▁▁▁█████████▁▁▁",
        "▁▁▁▁▁▁▁▁▁█████████▁▁",
        "▁▁▁▁▁▁▁▁▁█████████▁▁",
        "▁▁▁▁▁▁▁▁▁▁█████████▁",
        "▁▁▁▁▁▁▁▁▁▁▁████████▁",
        "▁▁▁▁▁▁▁▁▁▁▁████████▁",
        "▁▁▁▁▁▁▁▁▁▁▁▁███████▁",
        "▁▁▁▁▁▁▁▁▁▁▁▁███████▁",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁███████",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁███████",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█████",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁████",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁████",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁████",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁██",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁██",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁██",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁",
        "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁"
    ],
    17
);
spinner!("earth", ["🌍 ", "🌎 ", "🌏 "], 180);
spinner!(
    "moon",
    ["🌑 ", "🌒 ", "🌓 ", "🌔 ", "🌕 ", "🌖 ", "🌗 ", "🌘 "],
    80
);
spinner!("runner", ["🚶 ", "🏃 "], 140);
spinner!(
    "pong",
    [
        "▐⠂       ▌",
        "▐⠈       ▌",
        "▐ ⠂      ▌",
        "▐ ⠠      ▌",
        "▐  ⡀     ▌",
        "▐  ⠠     ▌",
        "▐   ⠂    ▌",
        "▐   ⠈    ▌",
        "▐    ⠂   ▌",
        "▐    ⠠   ▌",
        "▐     ⡀  ▌",
        "▐     ⠠  ▌",
        "▐      ⠂ ▌",
        "▐      ⠈ ▌",
        "▐       ⠂▌",
        "▐       ⠠▌",
        "▐       ⡀▌",
        "▐      ⠠ ▌",
        "▐      ⠂ ▌",
        "▐     ⠈  ▌",
        "▐     ⠂  ▌",
        "▐    ⠠   ▌",
        "▐    ⡀   ▌",
        "▐   ⠠    ▌",
        "▐   ⠂    ▌",
        "▐  ⠈     ▌",
        "▐  ⠂     ▌",
        "▐ ⠠      ▌",
        "▐ ⡀      ▌",
        "▐⠠       ▌"
    ],
    80
);
spinner!(
    "shark",
    [
        "▐|\\____________▌",
        "▐_|\\___________▌",
        "▐__|\\__________▌",
        "▐___|\\_________▌",
        "▐____|\\________▌",
        "▐_____|\\_______▌",
        "▐______|\\______▌",
        "▐_______|\\_____▌",
        "▐________|\\____▌",
        "▐_________|\\___▌",
        "▐__________|\\__▌",
        "▐___________|\\_▌",
        "▐____________|\\▌",
        "▐____________/|▌",
        "▐___________/|_▌",
        "▐__________/|__▌",
        "▐_________/|___▌",
        "▐________/|____▌",
        "▐_______/|_____▌",
        "▐______/|______▌",
        "▐_____/|_______▌",
        "▐____/|________▌",
        "▐___/|_________▌",
        "▐__/|__________▌",
        "▐_/|___________▌",
        "▐/|____________▌"
    ],
    120
);
spinner!("dqpb", ["d", "q", "p", "b"], 100);
spinner!(
    "weather",
    [
        "☀️ ", "☀️ ", "☀️ ", "🌤 ", "⛅️ ", "🌥 ", "☁️ ", "🌧 ", "🌨 ", "🌧 ", "🌨 ",
        "🌧 ", "🌨 ", "⛈ ", "🌨 ", "🌧 ", "🌨 ", "☁️ ", "🌥 ", "⛅️ ", "🌤 ", "☀️ ",
        "☀️ "
    ],
    100
);
spinner!("christmas", ["🌲", "🎄"], 400);
spinner!(
    "grenade",
    [
        "،  ", "′  ", " ´ ", " ‾ ", "  ⸌", "  ⸊", "  |", "  ⁎", "  ⁕", " ෴ ",
        "  ⁓", "   ", "   ", "   "
    ],
    80
);
spinner!("point", ["∙∙∙", "●∙∙", "∙●∙", "∙∙●", "∙∙∙"], 125);
spinner!("layer", ["-", "=", "≡"], 150);
spinner!(
    "beta_wave",
    [
        "ρββββββ",
        "βρβββββ",
        "ββρββββ",
        "βββρβββ",
        "ββββρββ",
        "βββββρβ",
        "ββββββρ"
    ],
    80
);
spinner!(
    "finger_dance",
    ["🤘 ", "🤟 ", "🖖 ", "✋ ", "🤚 ", "👆 "],
    160
);
spinner!(
    "fist_bump",
    [
        "🤜　　　　🤛 ",
        "🤜　　　　🤛 ",
        "🤜　　　　🤛 ",
        "　🤜　　🤛　 ",
        "　　🤜🤛　　 ",
        "　🤜✨🤛　　 ",
        "🤜　✨　🤛　 "
    ],
    80
);
spinner!(
    "soccer_header",
    [
        " 🧑⚽️       🧑 ",
        "🧑  ⚽️      🧑 ",
        "🧑   ⚽️     🧑 ",
        "🧑    ⚽️    🧑 ",
        "🧑     ⚽️   🧑 ",
        "🧑      ⚽️  🧑 ",
        "🧑       ⚽️🧑  ",
        "🧑      ⚽️  🧑 ",
        "🧑     ⚽️   🧑 ",
        "🧑    ⚽️    🧑 ",
        "🧑   ⚽️     🧑 ",
        "🧑  ⚽️      🧑 "
    ],
    80
);
spinner!(
    "mind_blown",
    [
        "😐 ", "😐 ", "😮 ", "😮 ", "😦 ", "😦 ", "😧 ", "😧 ", "🤯 ", "💥 ",
        "✨ ", "　 ", "　 ", "　 "
    ],
    160
);
spinner!("speaker", ["🔈 ", "🔉 ", "🔊 ", "🔉 "], 160);
spinner!("orange_pulse", ["🔸 ", "🔶 ", "🟠 ", "🟠 ", "🔶 "], 100);
spinner!("blue_pulse", ["🔹 ", "🔷 ", "🔵 ", "🔵 ", "🔷 "], 100);
spinner!(
    "orange_blue_pulse",
    [
        "🔸 ", "🔶 ", "🟠 ", "🟠 ", "🔶 ", "🔹 ", "🔷 ", "🔵 ", "🔵 ", "🔷 "
    ],
    100
);
spinner!(
    "time_travel",
    [
        "🕛 ", "🕚 ", "🕙 ", "🕘 ", "🕗 ", "🕖 ", "🕕 ", "🕔 ", "🕓 ", "🕒 ",
        "🕑 ", "🕐 "
    ],
    100
);
spinner!(
    "aesthetic",
    [
        "▰▱▱▱▱▱▱",
        "▰▰▱▱▱▱▱",
        "▰▰▰▱▱▱▱",
        "▰▰▰▰▱▱▱",
        "▰▰▰▰▰▱▱",
        "▰▰▰▰▰▰▱",
        "▰▰▰▰▰▰▰",
        "▰▱▱▱▱▱▱"
    ],
    80
);
